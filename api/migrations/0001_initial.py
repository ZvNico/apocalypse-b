# Generated by Django 4.0.5 on 2022-06-20 11:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Choices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('discount', models.FloatField(verbose_name='réduction(%)')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
            ],
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('isDLC', models.BooleanField(default=False, verbose_name='est un dlc')),
                ('price', models.FloatField(verbose_name='prix réduit(vrai prix)')),
                ('cover', models.ImageField(upload_to='', verbose_name='image de couverture')),
                ('content', models.TextField(help_text="separate each content with '|' (AC Valhalla|AC Valhalla: Aube du Ranarok)", verbose_name='contenus')),
                ('initial_price', models.FloatField(verbose_name='prix initial')),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('choices_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.choices')),
            ],
            bases=('api.choices',),
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('choices_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.choices')),
            ],
            bases=('api.choices',),
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('choices_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.choices')),
            ],
            bases=('api.choices',),
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('choices_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.choices')),
            ],
            bases=('api.choices',),
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('choices_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.choices')),
            ],
            bases=('api.choices',),
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, verbose_name='code')),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.edition', verbose_name='édition')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('description', models.TextField()),
                ('cover', models.ImageField(upload_to='', verbose_name='image de couverture')),
                ('release_date', models.DateField()),
                ('default_edition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='game_default', to='api.edition', verbose_name='edition par défaut')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.developer', verbose_name='développeur')),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.editor', verbose_name='editeur')),
                ('genres', models.ManyToManyField(to='api.genre', verbose_name='genres')),
            ],
        ),
        migrations.AddField(
            model_name='edition',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='api.game', verbose_name='jeu'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.discountcode', verbose_name='code')),
                ('editions', models.ManyToManyField(to='api.edition', verbose_name='éditions')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
        ),
        migrations.AddField(
            model_name='edition',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.platform', verbose_name='plateforme'),
        ),
        migrations.AddField(
            model_name='edition',
            name='support',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.support', verbose_name='support'),
        ),
    ]
